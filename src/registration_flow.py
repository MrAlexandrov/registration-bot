from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ConversationHandler, CommandHandler, MessageHandler, CallbackContext, filters

class RegistrationFlow:
    """–ì–∏–±–∫–∏–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —à–∞–≥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    STEPS = [
        {"name": "ask_name", "message": "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", "next": "ask_contact"},
        {"name": "ask_contact", "message": "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", "next": None},
    ]

    def __init__(self):
        self.step_map = {step["name"]: step for step in self.STEPS}
        self.first_step = self.STEPS[0]["name"]

    def get_next_step(self, current_step):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ø–æ –∏–º–µ–Ω–∏ —Ç–µ–∫—É—â–µ–≥–æ."""
        return self.step_map.get(current_step, {}).get("next")

    def get_message(self, step_name):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞."""
        return self.step_map.get(step_name, {}).get("message", "–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —à–∞–≥.")

    async def start_registration(self, update: Update, context: CallbackContext):
        """–ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞."""
        return await self.run_step(update, context, self.first_step)

    async def run_step(self, update: Update, context: CallbackContext, step_name):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
        next_step = self.get_next_step(step_name)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if step_name == "ask_name":
            context.user_data["name"] = update.message.text
        elif step_name == "ask_contact":
            context.user_data["phone"] = update.message.text

        # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–µ–º—É
        if next_step:
            await update.message.reply_text(self.get_message(next_step))
            return next_step

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        name = context.user_data.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        phone = context.user_data.get("phone", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        await update.message.reply_text(f"üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüë§ –ò–º—è: {name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}")
        return ConversationHandler.END

    async def cancel(self, update: Update, context: CallbackContext):
        """–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
        await update.message.reply_text("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return ConversationHandler.END


registration_flow = RegistrationFlow()
